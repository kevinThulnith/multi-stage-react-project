# Ultra-minimal Dockerfile (smallest possible)
# ---- Stage 1: Build ----
FROM node:22-alpine AS builder

WORKDIR /app

# Copy package files and install ALL dependencies for build
COPY package*.json ./
RUN npm ci --prefer-offline --no-audit --no-fund

# Copy source and build
COPY . .
RUN npm run build

# ---- Stage 2: Minimal Runtime ----
FROM node:22-alpine AS runner

WORKDIR /app

# Copy only package.json and install minimal runtime deps
COPY package*.json ./
RUN npm ci --only=production --prefer-offline --no-audit --no-fund --omit=dev && \
    npm install tsx cross-env --prefer-offline --no-audit --no-fund && \
    npm cache clean --force && \
    rm -rf /root/.npm /tmp/* /var/cache/apk/* /usr/local/lib/node_modules/npm

# Copy built assets and minimal server files
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/index.html ./
COPY --from=builder /app/server.ts ./

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S appuser -u 1001 -G nodejs && \
    chown -R appuser:nodejs /app

USER appuser

EXPOSE 5173

# Use exec form for better signal handling
CMD ["npm", "run", "serve"]
